<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    This is BOM (Bill of Materials) module that manages versions

    For dependencies and project configuration see parent/pom.xml

    Project structure:
    - Root BOM module
        - parent module
            - application-api module
            - routing-api module

     More detail https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Bill_of_Materials_.28BOM.29_POMs
     -->

    <groupId>com.github.ivmikhail</groupId>
    <artifactId>parent</artifactId>
    <version>0.1</version>
    <packaging>pom</packaging>

    <!-- Project configuration -->
    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyy.MMdd.HHmmss</maven.build.timestamp.format>
        <revision>latest</revision> <!-- default version -->
        <docker.image>${project.name}:${project.version}</docker.image>
        <otlp.headers>none</otlp.headers>
    </properties>

    <modules>
        <module>common</module>
        <module>application-api</module>
        <module>routing-api</module>
    </modules>

    <profiles>
        <profile>
            <id>set-registry-addr-from-env</id>
            <activation>
                <property>
                    <name>env.REGISTRY_ADDR</name>
                </property>
            </activation>
            <properties>
                <docker.image>${env.REGISTRY_ADDR}/${project.name}:${project.version}</docker.image>
            </properties>
        </profile>

        <profile>
            <id>set-otlp-headers</id>
            <activation>
                <property>
                    <name>env.OTEL_EXPORTER_OTLP_HEADERS</name>
                </property>
            </activation>
            <properties>
                <otlp.headers>${env.OTEL_EXPORTER_OTLP_HEADERS}</otlp.headers>
            </properties>
        </profile>
    </profiles>

    <!-- Project dependencies only here -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.13.4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>5.19.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>1.4.4</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>2.0.17</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.5.18</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.opentelemetry</groupId>
                <artifactId>aws-opentelemetry-agent</artifactId>
                <version>2.11.4</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>1.52.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>3.4.6</version>
                    <configuration>
                        <from>
                            <image>eclipse-temurin:21-jre-jammy</image>
                        </from>
                        <to>
                            <image>${docker.image}</image>
                            <auth>
                                <username>${env.REGISTRY_USERNAME}</username>
                                <password>${env.REGISTRY_PASSWORD}</password>
                            </auth>
                        </to>
                        <container>
                            <ports>
                                <port>8080</port>
                            </ports>
                            <jvmFlags>
                                <jvmFlag>-javaagent:/app/libs/aws-opentelemetry-agent-2.11.4.jar</jvmFlag>
                                <jvmFlag>-Dotel.java.global-autoconfigure.enabled=true</jvmFlag>
                                <jvmFlag>-Dotel.propagators=tracecontext,baggage,xray</jvmFlag>
                            </jvmFlags>
                            <environment>
                                <OTEL_SERVICE_NAME>routing-api</OTEL_SERVICE_NAME>
                                <OTEL_SERVICE_NAME>routing-api</OTEL_SERVICE_NAME>
                                <OTEL_RESOURCE_ATTRIBUTES>
                                    service.name=routing-api,service.namespace=round-robin,service.version=${project.version}
                                </OTEL_RESOURCE_ATTRIBUTES>
                                <OTEL_EXPORTER_OTLP_ENDPOINT>https://otlp-gateway-prod-ap-southeast-1.grafana.net/otlp
                                </OTEL_EXPORTER_OTLP_ENDPOINT>
                                <OTEL_EXPORTER_OTLP_PROTOCOL>http/protobuf</OTEL_EXPORTER_OTLP_PROTOCOL>
                                <OTEL_EXPORTER_OTLP_HEADERS>${otlp.headers}</OTEL_EXPORTER_OTLP_HEADERS>
                            </environment>
                        </container>
                    </configuration>
                    <executions>
                        <execution>
                            <id>docker-build-on-package</id>
                            <phase>package</phase> <!-- binds to package -->
                            <goals>
                                <goal>dockerBuild</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.13</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>